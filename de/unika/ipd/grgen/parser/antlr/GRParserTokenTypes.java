// $ANTLR : "grgen.g" -> "GRParser.java"$

    package de.unika.ipd.grgen.parser.antlr;

		import java.util.Iterator;
		import java.util.List;
		import java.util.LinkedList;
		import java.util.Map;
		import java.util.HashMap;
		
		import de.unika.ipd.grgen.parser.Symbol;
		import de.unika.ipd.grgen.parser.SymbolTable;
		import de.unika.ipd.grgen.parser.Scope;
    import de.unika.ipd.grgen.ast.*;
    import de.unika.ipd.grgen.util.report.*;
    import de.unika.ipd.grgen.Main;

public interface GRParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int DECL_GROUP = 4;
	int DECL_TEST = 5;
	int DECL_TYPE = 6;
	int DECL_NODE = 7;
	int DECL_EDGE = 8;
	int DECL_BASIC = 9;
	int TYPE_NODE = 10;
	int TYPE_EDGE = 11;
	int SIMPLE_CONN = 12;
	int GROUP_CONN = 13;
	int TEST_BODY = 14;
	int PATTERN_BODY = 15;
	int SUBGRAPH_SPEC = 16;
	int CONN_DECL = 17;
	int CONN_CONT = 18;
	int MAIN = 19;
	int LITERAL_unit = 20;
	int SEMI = 21;
	int LITERAL_edge = 22;
	int LITERAL_class = 23;
	int LBRACE = 24;
	int RBRACE = 25;
	int RARROW = 26;
	int LITERAL_node = 27;
	int LITERAL_extends = 28;
	int COMMA = 29;
	int LBRACK = 30;
	int COLON = 31;
	int RBRACK = 32;
	int INTEGER = 33;
	int LITERAL_enum = 34;
	int ASSIGN = 35;
	int LITERAL_group = 36;
	int LITERAL_test = 37;
	int LITERAL_rule = 38;
	int LPAREN = 39;
	int RPAREN = 40;
	int LITERAL_in = 41;
	int LITERAL_out = 42;
	int LITERAL_pattern = 43;
	int LITERAL_replace = 44;
	int LITERAL_redirect = 45;
	int LITERAL_eval = 46;
	int LITERAL_cond = 47;
	int MINUS = 48;
	int LARROW = 49;
	int NOTLARROW = 50;
	int NOTMINUS = 51;
	int TILDE = 52;
	int DOUBLECOLON = 53;
	int IDENT = 54;
	int QUESTION = 55;
	int LOR = 56;
	int LAND = 57;
	int BOR = 58;
	int BXOR = 59;
	int BAND = 60;
	int EQUAL = 61;
	int NOT_EQUAL = 62;
	int LT = 63;
	int LE = 64;
	int GT = 65;
	int GE = 66;
	int SL = 67;
	int SR = 68;
	int BSR = 69;
	int PLUS = 70;
	int STAR = 71;
	int MOD = 72;
	int DIV = 73;
	int NOT = 74;
	int NUM_DEC = 75;
	int NUM_HEX = 76;
	int STRING_LITERAL = 77;
	int LITERAL_true = 78;
	int LITERAL_false = 79;
	int DOT = 80;
	int WS = 81;
	int SL_COMMENT = 82;
	int ML_COMMENT = 83;
	int ESC = 84;
}
