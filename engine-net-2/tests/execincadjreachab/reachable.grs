new graph execincadjreachab/execincadjreachab
exec (::s)=init

exec ::a=array<Node>[] ;> for{n:Node in reachableIncoming(::s,Edge,N); {::a.add(n)}}
show var a

clear graph
exec (::s)=init

exec ::a=array<Edge>[] ;> for{e:Edge in reachableEdgesIncoming(::s,Edge,N); {::a.add(e)}}
show var a

clear graph
exec (::s)=init

exec ::a=array<Node>[] ;> for{n:Node in reachableOutgoing(::s,Edge,N); {::a.add(n)}}
show var a

clear graph
exec (::s)=init

exec ::a=array<Edge>[] ;> for{e:Edge in reachableEdgesOutgoing(::s,Edge,N); {::a.add(e)}}
show var a

clear graph
exec (::s)=init

exec ::a=array<Node>[] ;> for{n:Node in reachable(::s,Edge,N); {::a.add(n)}}
show var a

clear graph
exec (::s)=init

exec ::a=array<Edge>[] ;> for{e:Edge in reachableEdges(::s,Edge,N); {::a.add(e)}}
show var a

quit