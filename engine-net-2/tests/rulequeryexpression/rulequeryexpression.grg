rule init : (Node)
{
	modify {
		n:Node --> m:Node;
		return(n);
	}
}

rule r(n:Node) : (Node)
{
	n --> m:Node;
	
	modify {
		return(m);
	}
}

test b(var b:boolean)
{
	n:Node --> m:Node;
	if{ !b; }	
}

test t
{
	n:Node --> .;
}

sequence seqEmitRuleQuery
{
	{ emit("the value of variable \"rule\" of type evaluation is: ", ![?r(::start1)].empty(), "\n") }
}

sequence seqExecTestRuleQuery
{
	b([?t].empty())
}

sequence seqExecRuleRuleQuery
{
	b([?r(::start1)].empty())
}
