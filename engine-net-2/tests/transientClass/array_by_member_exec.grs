new graph "transientClass/array_by_member.grg"

exec { ::a = array<Simple>[]; ::v=new Simple(); ::v.i = 0; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = -1; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = 2; ::a.add(::v) }

show var a

exec { ::o=::a.indexOfBy<i>(1) }

show var o

exec { ::a = array<Simple>[]; ::v=new Simple(); ::v.i = 0; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = -1; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = 2; ::a.add(::v) }

show var a

exec { ::o=::a.indexOfBy<i>(1,2) }

show var o

exec { ::a = array<Simple>[]; ::v=new Simple(); ::v.i = 0; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = -1; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = 2; ::a.add(::v) }

show var a

exec { ::o=::a.lastIndexOfBy<i>(1) }

show var o

exec { ::a = array<Simple>[]; ::v=new Simple(); ::v.i = 0; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = -1; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = 2; ::a.add(::v) }

show var a

exec { ::o=::a.lastIndexOfBy<i>(1,2) }

show var o

exec { ::a = array<Simple>[]; ::v=new Simple(); ::v.i = 0; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = -1; ::a.add(::v); ::v=new Simple(); ::v.i = 1; ::a.add(::v); ::v=new Simple(); ::v.i = 2; ::a.add(::v) }
exec { ::a = ::a.orderAscendingBy<i>() }

show var a

exec { ::o=::a.indexOfOrderedBy<i>(1) }

show var o

quit
