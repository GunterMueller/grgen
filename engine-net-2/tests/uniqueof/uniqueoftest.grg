#using "uniqueoftest.gm"

rule t {
	n:N -e:E-> n;
---	
	def var nodeunique:int;
	def var edgeunique:int;
	def var graphunique:int;
	def var objectunique:long;
	def var objectunique2:long;
	
	yield {
		yield nodeunique = uniqueof(n);
		yield edgeunique = uniqueof(e);
		yield graphunique = uniqueof();
		yield objectunique = uniqueof(n.o);
		yield objectunique2 = uniqueof(e.o);
	}
	
	modify {
	---
		emit("The value of attribute noattribute is " + nodeunique + "\n");
		emit("The value of attribute noattribute is " + edgeunique + "\n");
		emit("The value of attribute noattribute is " + graphunique + "\n");
		emit("The value of attribute noattribute is " + objectunique + "\n");
		emit("The value of attribute noattribute is " + objectunique2 + "\n");
	}
}

rule r {
	n:N -e:E-> n;
---
	def var subgraph:graph;
	def var subgraphunique:int;

	yield {
		yield subgraph = inducedSubgraph(set<Node>{n});
		yield subgraphunique = uniqueof(subgraph);
	}
	
	modify {
	---
		emit("The value of attribute noattribute is " + subgraphunique + "\n");
	}
}

rule s {
	n:N -e:E-> n;
	
	if{ source(edgeByUnique(1))==nodeByUnique(0); }
	if{ nodeByUnique(42) == (edgeByUnique(42)!=null ? target(edgeByUnique(42)) : nodeByUnique(42)); }
		
	modify {
	---
		emit("The value of attribute noattribute is " + uniqueof(nodeByUnique(0)) + "\n");
		emit("The value of attribute noattribute is " + uniqueof(edgeByUnique(1)) + "\n");
	}
}

rule texec {
	n:N -e:E-> n;

	modify {
	---
		def var i:int;
		def var l:long;
		
		exec({i=uniqueof(n); emit("The value of attribute noattribute is " + i + "\n")});
		exec({i=uniqueof(e); emit("The value of attribute noattribute is " + i + "\n")});
		exec({i=uniqueof(); emit("The value of attribute noattribute is " + i + "\n")});
		exec({l=uniqueof(n.o); emit("The value of attribute noattribute is " + l + "\n")});
		exec({l=uniqueof(e.o); emit("The value of attribute noattribute is " + l + "\n")});
	}
}

rule texec2 {
	n:N -e:E-> n;

	modify {
	---		
		exec({i:int=uniqueof(n); emit("The value of attribute noattribute is " + i + "\n")});
		exec({i:int=uniqueof(e); emit("The value of attribute noattribute is " + i + "\n")});
		exec({i:int=uniqueof(); emit("The value of attribute noattribute is " + i + "\n")});
		exec({l:long=uniqueof(n.o); emit("The value of attribute noattribute is " + l + "\n")});
		exec({l:long=uniqueof(e.o); emit("The value of attribute noattribute is " + l + "\n")});
	}
}

rule texec3 {
	modify {
	---		
		exec({i:int=uniqueof(::n); emit("The value of attribute noattribute is " + i + "\n")});
		exec({i:int=uniqueof(::e); emit("The value of attribute noattribute is " + i + "\n")});
		exec({i:int=uniqueof(); emit("The value of attribute noattribute is " + i + "\n")});
		exec({l:long=uniqueof(::n.o); emit("The value of attribute noattribute is " + l + "\n")});
		exec({l:long=uniqueof(::e.o); emit("The value of attribute noattribute is " + l + "\n")});
	}
}
