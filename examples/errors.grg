actions errors;

test injectiv_between_L_and_N {
	pattern {
		node (m ~ n) : Node;
		node o: Node;
		o --> m;
		negative {
			o --> n;
		}
	}
}

test This_is_not_allowed_too {
	pattern {
		node (m ~ n) : Node;
		node o: Node;
		m;
		o;
		negative {
			o --> n;
			o --> m;
		}
	}
	/*
		L = {o, m}
		N = {o, n, m}
		N-l(L) = {n, m}
		n~m verletz obige Bedingung.
	*/
}

test neg_is_sub_of_pat {
	pattern {
		node (a, b): Node;
		a --> b;
		negative {
			a;
		}
	}
}

rule wrong_reuse_of_named_edges {
	pattern {
		node (a, b): Node;
		a -e:Edge-> b;
		negative { a -e-> c:Node; }  //wrong tgt-node
		negative { a <-e- c:Node; }  //wrong src-node
	}
	replace {
		a <-e- b; //wrong direction
	}
}