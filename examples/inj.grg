unit MyTest;

rule This_is_not_allowed {
	pattern {
		node o: Node;
		o --> m;
	}
	negative {
		node (m ~ n) : Node;
		o --> n;
	}
	replace {
	}
}


/* Erklaerung

l(o) = o
m(o) = o
n(o) = o
n(n) = m  und  m(m) = m  Verboten ==> (m ~ n) verboten.

Allg.: 
m ~ n 
==> beide in L (koennen somit auch in l(L) sein)

==> \forall g \elem N - l(L) \not \exists h \elem N \union L : g != h und g~h

*/

rule This_is_not_allowed_too {
	pattern {
		node (m ~ n) : Node;
		node o: Node;
		m;
		o;
	}
	negative {
		o --> n;
		o --> m;
	}
	replace {
	}
}

/*

L = {o}
N = {o, n, m}
N-l(L) = {n, m}

n~m verletz obige Bedingung.

*/


rule This_is_allowed {
	pattern {
		node (m ~ n) : Node;
		node o: Node;
		m; n;
		o;
	}
	negative {
		o;
	}
	replace {
	}
}
