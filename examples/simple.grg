unit ASimpleTest;

enum Test {
  a, b, c, d
}  

node class IRNode extends Node {
  a:int;
  b:boolean;
  c:string;
} 



  test Simple {
    pattern {
      node a:IRNode, b:Node; 

      a --> b (-e:Edge-> c:Node, --> d:Node, -:Edge-> x);

      x:Node;
    }
  }

  
  rule ARule {
    pattern {

      add:Node (--> op0:Node --> op2:Node, --> op1:Node);
      
    }
    replace {
      op0 --> abc:Node ;
    }
  }
