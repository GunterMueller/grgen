rule r implements mc
{
	n:Node;
---
	def var i:int;
	def var j:int;

	yield {
		yield i = incident(n).size();
		yield j = 0;
	}
	
	modify {
		delete(n);
	}
} \ orderAscendingBy<i>

match class mc
{
	n:Node;
	def var i:int;
	def var j:int;
} \ orderAscendingBy<i>

rule r_assign_filter
{
	modify {
	---
		exec({::res2 = [?r\orderAscendingBy<i>\assign<j>{this_:array<match<r_assign_filter>>; m:match<r> -> this_.extract<i>().sum()}]});
	}
}
